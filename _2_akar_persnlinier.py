# -*- coding: utf-8 -*-
"""_2_Akar_PersNLinier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GLUoowTN6L-pJmUkRHFTakDAudK4WEcY

## **Akar Persamaan Non-Linier**
Berikut ini merupakan fungsi dasar dari metode yang dapat digunakan untuk mencari akar Persamaan non-Linier

**Metode Bagi Dua**
"""

import numpy as np #panggil library
def my_bisection(f, a, b, e):
  if np.sign(f(a)) == np.sign(f(b)):
    raise Exception('Tidak ada akar pada interval a dan b')
  m = (a + b)/2
  if np.abs(f(m)) < e:
    return m
  elif np.sign(f(a)) == np.sign(f(m)):
    return my_bisection(f, m, b, e)
  elif np.sign(f(b)) == np.sign(f(m)):
    return my_bisection(f, a, m, e)

"""**Contoh Pencarian Akar dengan Metode Bagi Dua**

`f(x)=x^2 - 2`
"""

import numpy as np #panggil library
f = lambda x: x**2-2

r1 = my_bisection(f, 0, 2, 0.1)
print("r1 =", r1)
print("f(r1) =", f(r1))

r01 = my_bisection(f, 0, 2, 0.01)
print("r01 =", r01)
print("f(r01) =", f(r01))

"""`f(x) = x^2 - 2`"""

import numpy as np #panggil library
f = lambda x: x**2-2
my_bisection(f, 2, 4, 0.01)

"""# **Latihan 1**

```
No 1
Buatlah sebuah fungsi penyelesaian yang tepat baik dengan menggunakan metode Bagi Dua ketika
a. f(x) = x^3 - 2x + 1
b. f(x) = e^x - x

No 2
1. Buatlah modifikasi fungsi ketika kriteria program berhenti adalah sudah mencapai pada iterasi ke-n
2. Buatlah modifikasi agar user dapat menginputkan fungsi maupun batas akar dan galatnya
3. Buatlah modifikasi agar akarnya dapat ditampilkan dalam bentuk grafik
```
"""